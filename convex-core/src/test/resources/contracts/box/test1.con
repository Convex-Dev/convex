;; Assumed done in test setup already
;; (import convex.asset :as asset)
;; (import <box contract> :as box)
;; (def box (get *aliases* 'box))

(def b1 (call box (create-box)))

(assert (long? b1))
(assert (= (asset/balance box *address*) #{b1}))  
(assert (asset/owns? *address* [box #{b1}]))  

;; burn the box b1
(call box (burn #{b1}))
(assert (not (asset/owns? *address* [box #{b1}])))
(assert (= (asset/balance box *address*) #{}))  


;; use a zombie actor
(def zombie (deploy `(do 
                       (import convex.asset :as asset)
                       (def box ~box)
                       (set-controller *caller*) 
                       (defn receive-asset ^{:callable true} [a data] (asset/accept *caller* a)))))

(def b2 (call box (create-box)))

(assert (= #{b2} (asset/balance box *address*)))
(asset/transfer zombie [box #{b2}])

(assert (= #{b2} (asset/balance box zombie)))

(eval-as zombie `(asset/transfer *caller* [box (asset/balance box *address*)]))
(assert (= #{b2} (asset/balance box *address*)))
